C51 COMPILER V9.60.0.0   MAIN                                                              10/28/2021 15:29:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\main.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Include;.\FreeModB
                    -us\Inc) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          //#include "config.h"
   2          #include "Menu.h"
   3          #include "timer.h"
   4          #include "usart.h"
   5          //#include "systemTimer.h"
   6          #include "eeprom.h"
   7          #include "GPIO.h"
   8          #include "LCD.h"
   9          #include "Key.h"
  10          #include "Control.h"
  11          #include "pFunc.h"
  12          #include "report.h"
  13          #include "mdrtuslave.h"
  14          #include "wifi.h"
  15          
  16          /*系统参数*/
  17          SYSTEM_PARAMETER System_Parameter = {0, false, false, "\xFF\xFF\xFF\xFF", "\x08\x08\x02\x08", 0x01, 0x01, 
             -0x00, 0xa988};
  18          
  19          static void systemInit(void);
  20          static void UsartHandle(void);
  21          static void Iap_Flash_Iinit(void);
  22          
  23          void main(void)
  24          {
  25   1          systemInit(); //系统初始化
  26   1      
  27   1          while(1)
  28   1          {   /*按键*/
  29   2                      KeyEvent(); 
  30   2                      /*多串口数据处理*/
  31   2                      Uart_Handle();
  32   2                      /*ModBus接收数据处理*/
  33   2      //        mdRTU_Handler();
  34   2          }
  35   1      }
  36          
  37          void systemInit(void)
  38          {
  39   1              Init_All(); //初始化外设
  40   1              
  41   1              /***********************************************************************/
  42   1          //以太网串口结构体初始化
  43   1              memset(&COM_UART1,  0, sizeof(COM_UART1));
  44   1              
  45   1              // 4G串口结构体初始化
  46   1              memset(&COM_UART2, 0, sizeof(COM_UART2));
  47   1              
  48   1              // RS485串口结构体初始化
  49   1              memset(&COM_UART3, 0, sizeof(COM_UART3));
  50   1              
  51   1              // PLC串口结构体初始化
  52   1              memset(&COM_UART4, 0, sizeof(COM_UART4));
  53   1      
C51 COMPILER V9.60.0.0   MAIN                                                              10/28/2021 15:29:44 PAGE 2   

  54   1              /***********************************************************************/
  55   1              /*液晶屏初始化*/
  56   1          initial_lcd();  
  57   1          /*系统参数存储区初始化*/
  58   1          Iap_Flash_Iinit();
  59   1          /*以下为系统滴答定时器的初始化（10ms （不建议更改））*/      
  60   1          Timer0_Init();
  61   1          PublicTimer16.MenuDly16.Timer16Flag = false;
  62   1          // /*控件变量初始化,放在串口3初始化之前*/
  63   1          // ControlInit();   
  64   1          /*STC程序下载/printf/以太网*/
  65   1          Uart1_Init(); 
  66   1          /*4G模块*/
  67   1          Uart2_Init(); 
  68   1          /*RS485*/
  69   1          Uart3_Init(); 
  70   1          /*PLC*/
  71   1          Uart4_Init(); 
  72   1          /*串口3的485使能引脚，初始化为接收状态*/
  73   1          USART3_EN = 0; 
  74   1          /*控件变量初始化,放在串口3初始化之前*/
  75   1          ControlInit();
  76   1          /*打开全局中断*/
  77   1          OPEN_GLOBAL_OUTAGE(); 
  78   1              /*初始化Modbus协议栈*/
  79   1      //      ModbusInit();
  80   1          /*显示界面初始化*/ 
  81   1          LcdShowInit();
  82   1          if(System_Parameter.WifiInitFlag == false)
  83   1          {
  84   2              /*初始化WIIF模块*/
  85   2              Wifi_Init(); 
  86   2              System_Parameter.WifiInitFlag = true; 
  87   2              /*存储到IAPFLASH*/
  88   2              ControlSave();
  89   2          }
  90   1          /*看门狗初始化 */ 
  91   1      //      WDT_init();
  92   1      }
  93          
  94          /************************************外设初始化************************************/
  95          void  Init_All(void)
  96          {
  97   1          GPIO_InitTypeDef GPIO_InitStruct;
  98   1      
  99   1      //    #ifdef EXTERNAL_CRYSTAL //只要有宏名，就成立
 100   1              #if EXTERNAL_CRYSTAL
 101   1          P_SW2 = 0x80;
 102   1          XOSCCR = 0xC0;
 103   1          /*启动外部晶振20MHz*/
 104   1          while (!(XOSCCR & 1));             
 105   1          /*时钟不分频*/
 106   1          CLKDIV = 0x01;  
 107   1          /*选择外部晶振 */                    
 108   1          CKSEL = 0x01;                    
 109   1          P_SW2 = 0x00;
 110   1          #endif
 111   1      //  P_SW1 = 0xC0; //串口1切换到P4.3、4.4(P0.2、0.3)
 112   1      //      P_SW2 |= 0x01; //串口2切换到P4.0、4.2(P1.0、1.1)（新板子引脚问题）
 113   1      
 114   1          //手册提示，串口1、2、3、4的发送引脚必须设置为强挽输出
 115   1              /*P0.x引脚输出方式*/
C51 COMPILER V9.60.0.0   MAIN                                                              10/28/2021 15:29:44 PAGE 3   

 116   1          /*设置P0.0、P0.2为准双向口*/
 117   1              GPIO_InitStruct.Mode = GPIO_PullUp;
 118   1          GPIO_InitStruct.Pin  = GPIO_Pin_0 | GPIO_Pin_2;
 119   1          GPIO_Inilize(GPIO_P0, &GPIO_InitStruct);
 120   1          /*设置P0.1为强挽输出 、设置P0.3为强挽输出*/
 121   1              GPIO_InitStruct.Mode = GPIO_OUT_PP;
 122   1          GPIO_InitStruct.Pin  = GPIO_Pin_1 | GPIO_Pin_3;
 123   1          GPIO_Inilize(GPIO_P0, &GPIO_InitStruct);
 124   1      
 125   1              /*P1.x引脚输出方式*/
 126   1          /*设置P1.0为准双向口*/
 127   1              GPIO_InitStruct.Mode = GPIO_PullUp;
 128   1          GPIO_InitStruct.Pin  = GPIO_Pin_0;
 129   1          GPIO_Inilize(GPIO_P1, &GPIO_InitStruct);
 130   1          /*设置P1.1、P1.4、 P1.5为强挽输出*/
 131   1              GPIO_InitStruct.Mode = GPIO_OUT_PP;
 132   1          GPIO_InitStruct.Pin  = GPIO_Pin_1 | GPIO_Pin_4 | GPIO_Pin_5;
 133   1          GPIO_Inilize(GPIO_P1, &GPIO_InitStruct);
 134   1      
 135   1          /*P2.x引脚输出方式*/
 136   1          /*按键相关P2.2、P2.3、P2.4、P2.5、P2.6为高阻态*/
 137   1          GPIO_InitStruct.Mode = GPIO_HighZ;
 138   1          GPIO_InitStruct.Pin  = GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_5 | GPIO_Pin_6;
 139   1          GPIO_Inilize(GPIO_P2, &GPIO_InitStruct);
 140   1      
 141   1              /*P3.x引脚输出方式*/
 142   1          /*设置P3.0为准双向口*/
 143   1              GPIO_InitStruct.Mode = GPIO_PullUp;
 144   1          GPIO_InitStruct.Pin  = GPIO_Pin_0;
 145   1          GPIO_Inilize(GPIO_P3, &GPIO_InitStruct);
 146   1      
 147   1          /*设置P3.1为强挽输出*/
 148   1              GPIO_InitStruct.Mode = GPIO_OUT_PP;
 149   1          GPIO_InitStruct.Pin  = GPIO_Pin_1;
 150   1          GPIO_Inilize(GPIO_P3, &GPIO_InitStruct);
 151   1          
 152   1      }
 153          /************************************外设初始化************************************/
 154          
 155          
 156          /************************************检查IAP区FLASH内容************************************/
 157          bit CheckIap_Flash(void)
 158          {
 159   1          uint16_t CRC = 0;
 160   1      
 161   1              /*读取存储区数据*/
 162   1              IapRead_Buff(START_SAVEADDRESS, &System_Parameter.PSWNext.PassWordbuff[0], (sizeof(System_Parameter) - (s
             -izeof(PASSWORDSTRUCT) - 4U))); 
 163   1              /*计算CRC校验码*/
 164   1              CRC = getCrc16(&System_Parameter.PSWNext.PassWordbuff[0], (sizeof(System_Parameter) - (sizeof(PASSWORDSTR
             -UCT) - 4U) - 2U), 0xffff);   
 165   1              /*比较当前校验码和存储区校验码是否匹配*/
 166   1              if(CRC == System_Parameter.CRC16)
 167   1              {
 168   2                      return true;
 169   2              }
 170   1              return false;
 171   1      }
 172          
 173          
 174          void Iap_Flash_Iinit(void)
 175          {   /*检查eeprom参数是否正确*/
C51 COMPILER V9.60.0.0   MAIN                                                              10/28/2021 15:29:44 PAGE 4   

 176   1          if(CheckIap_Flash())  
 177   1          {
 178   2              GUI_String(14, 31, "parameters are correct !", EN_5_8);
 179   2              Delay_ms(1000);
 180   2          }
 181   1          else
 182   1          {
 183   2              GUI_String(19, 31, "parameters error !", EN_5_8);
 184   2              Delay_ms(500);
 185   2              GUI_String(19, 31, "restore parameters...", EN_5_8);
 186   2                      
 187   2                      /*每次写之前必须进行擦除操作：擦除每次按照512B进行(0x00-0x0200)*/
 188   2              IapErase(START_SAVEADDRESS); 
 189   2                      /*把默认参数拷贝到当前数据结构*/
 190   2                      memcpy(&System_Parameter.PSWNext.PassWordbuff[0], DEFAULT_SYSTEM_PARAMETER, (sizeof(System_Parameter) - 
             -(sizeof(PASSWORDSTRUCT) - 4U))); 
 191   2                      /*把数据进行存储*/
 192   2              IapWrite_Buff(START_SAVEADDRESS, &System_Parameter.PSWNext.PassWordbuff[0], (sizeof(System_Paramet
             -er) - (sizeof(PASSWORDSTRUCT) - 4U))); //去掉一个字节的index
 193   2      
 194   2              Delay_ms(1000);
 195   2              clear_screen();
 196   2              GUI_String(49, 31, "successfully !", EN_5_8);
 197   2              Delay_ms(500);
 198   2          }
 199   1      }
 200          /************************************检查IAP区FLASH内容************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    453    ----
   CONSTANT SIZE    =     95    ----
   XDATA SIZE       =     16       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
