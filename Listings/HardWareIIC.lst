C51 COMPILER V9.60.0.0   HARDWAREIIC                                                       05/19/2021 10:25:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE HARDWAREIIC
OBJECT MODULE PLACED IN .\Objects\HardWareIIC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\HardWareIIC.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Include) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\HardWareIIC.lst) OBJECT(.\Objects\HardWareIIC.obj)

line level    source

   1          #include<STC8.h>
   2          #include"HardWareIIC.h"
   3          
   4          #define I2CCFG          (*(unsigned char volatile xdata *)0xfe80)
   5          #define I2CMSCR         (*(unsigned char volatile xdata *)0xfe81)
   6          #define I2CMSST         (*(unsigned char volatile xdata *)0xfe82)
   7          #define I2CSLCR         (*(unsigned char volatile xdata *)0xfe83)
   8          #define I2CSLST         (*(unsigned char volatile xdata *)0xfe84)
   9          #define I2CSLADR        (*(unsigned char volatile xdata *)0xfe85)
  10          #define I2CTXD          (*(unsigned char volatile xdata *)0xfe86)
  11          #define I2CRXD          (*(unsigned char volatile xdata *)0xfe87)
  12          
  13          bit busy11;
  14          //*****************************************************************
  15          sbit    SDA         =   P1^4;
  16          sbit    SCL         =   P1^5;
  17          //
  18          
  19          
  20          
  21          void IIC_Init(void)
  22          {
  23   1              P_SW2 = 0x80;
  24   1      
  25   1          I2CCFG = 0xe0;                              //使能I2C主机模式
  26   1          I2CMSST = 0x00;
  27   1          EA = 1;
  28   1      }
  29          
  30          
  31          
  32          void I2C_Isr() interrupt 24
  33          {
  34   1          char store;
  35   1          
  36   1          store = P_SW2;
  37   1          P_SW2 |= 0x80;
  38   1          if (I2CMSST & 0x40)
  39   1          {
  40   2              I2CMSST &= ~0x40;                       //清中断标志
  41   2              busy11 = 0;
  42   2          }
  43   1          P_SW2 = store;
  44   1      }
  45          
  46          void Start()
  47          {
  48   1              unsigned short ii = 2000;
  49   1          busy11 = 1;
  50   1          I2CMSCR = 0x81;                             //发送START命令
  51   1          while (busy11)
  52   1              {
  53   2                      if(!ii --)
  54   2                      {
C51 COMPILER V9.60.0.0   HARDWAREIIC                                                       05/19/2021 10:25:52 PAGE 2   

  55   3                              break;
  56   3                      }
  57   2              }
  58   1      
  59   1      }
  60          
  61          void SendData(char dat)
  62          {
  63   1              unsigned short ii = 2000;
  64   1          I2CTXD = dat;                               //写数据到数据缓冲区
  65   1          busy11 = 1;
  66   1          I2CMSCR = 0x82;                             //发送SEND命令
  67   1              while (busy11)
  68   1              {
  69   2                      if(!ii --)
  70   2                      {
  71   3                              break;
  72   3                      }
  73   2              }
  74   1      }
  75          
  76          void RecvACK()
  77          {
  78   1          
  79   1              unsigned short ii = 2000;
  80   1              busy11 = 1;
  81   1          I2CMSCR = 0x83;                             //发送读ACK命令
  82   1           while (busy11)
  83   1              {
  84   2                      if(!ii --)
  85   2                      {
  86   3                              break;
  87   3                      }
  88   2              }
  89   1      }
  90          
  91          char RecvData()
  92          {
  93   1              unsigned short ii = 2000;
  94   1          busy11 = 1;
  95   1          I2CMSCR = 0x84;                             //发送RECV命令
  96   1           while (busy11)
  97   1              {
  98   2                      if(!ii --)
  99   2                      {
 100   3                              break;
 101   3                      }
 102   2              }
 103   1          return I2CRXD;
 104   1      }
 105          
 106          void SendACK()
 107          {
 108   1              unsigned short ii = 2000;
 109   1          I2CMSST = 0x00;                             //设置ACK信号
 110   1          busy11 = 1;
 111   1          I2CMSCR = 0x85;                             //发送ACK命令
 112   1           while (busy11)
 113   1              {
 114   2                      if(!ii --)
 115   2                      {
 116   3                              break;
C51 COMPILER V9.60.0.0   HARDWAREIIC                                                       05/19/2021 10:25:52 PAGE 3   

 117   3                      }
 118   2              }
 119   1      }
 120          
 121          void SendNAK()
 122          {
 123   1              unsigned short ii = 2000;
 124   1          I2CMSST = 0x01;                             //设置NAK信号
 125   1          busy11 = 1;
 126   1          I2CMSCR = 0x85;                             //发送ACK命令
 127   1           while (busy11)
 128   1              {
 129   2                      if(!ii --)
 130   2                      {
 131   3                              break;
 132   3                      }
 133   2              }
 134   1      }
 135          
 136          void Stop()
 137          {
 138   1              unsigned short ii = 2000;
 139   1          busy11 = 1;
 140   1          I2CMSCR = 0x86;                             //发送STOP命令
 141   1           while (busy11)
 142   1              {
 143   2                      if(!ii --)
 144   2                      {
 145   3                              break;
 146   3                      }
 147   2              }
 148   1      }
 149          
 150          //void Delay()
 151          //{
 152          //    int i;
 153          //
 154          //    for (i=0; i<3000; i++)
 155          //    {
 156          //       _nop();_nop();_nop();
 157          //    }
 158          //}
 159          
 160          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    264    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
